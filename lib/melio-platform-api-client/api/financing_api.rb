=begin
#Platform API

#Melio Platform API enables partners to perform partner-related operations in Melio's system, for themselves, and on behalf of their system's users.

The version of the OpenAPI document: 1.0
Contact: platform@melio.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.1

=end

require 'cgi'

module MelioPlatformApiClient
  class FinancingApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Retrieve an Account's financing status
    # Return the current status and balance of an account's financing qualification. The account may be in one of a few steps, defined by the response's `status` enum: - Undetermined (`undetermined` status): The account hasn't qualified yet, or the qualification has expired - Pending (`pending` status): The account has requested qualification, and awaiting for response. - Ineligible (`ineligible` status): The account is currently not eligible for financing. - Eligible (`eligible` status): The account is eligibile for financing. In this case, the additional `balance` field would be populated with the remaining credit balance.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :melio_account The &#x60;Melio-Account&#x60; header is used when a Partner wants to perform an operation on behalf of one of its Accounts. It contains the Account&#39;s ID which returned when creating the Account, or when retrieving all of the Partner&#39;s Accounts. Note that most operations are not permitted without the presence of this header.
    # @return [GetFinancingResponse]
    def get_financing_status(opts = {})
      data, _status_code, _headers = get_financing_status_with_http_info(opts)
      data
    end

    # Retrieve an Account&#39;s financing status
    # Return the current status and balance of an account&#39;s financing qualification. The account may be in one of a few steps, defined by the response&#39;s &#x60;status&#x60; enum: - Undetermined (&#x60;undetermined&#x60; status): The account hasn&#39;t qualified yet, or the qualification has expired - Pending (&#x60;pending&#x60; status): The account has requested qualification, and awaiting for response. - Ineligible (&#x60;ineligible&#x60; status): The account is currently not eligible for financing. - Eligible (&#x60;eligible&#x60; status): The account is eligibile for financing. In this case, the additional &#x60;balance&#x60; field would be populated with the remaining credit balance.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :melio_account The &#x60;Melio-Account&#x60; header is used when a Partner wants to perform an operation on behalf of one of its Accounts. It contains the Account&#39;s ID which returned when creating the Account, or when retrieving all of the Partner&#39;s Accounts. Note that most operations are not permitted without the presence of this header.
    # @return [Array<(GetFinancingResponse, Integer, Hash)>] GetFinancingResponse data, response status code and response headers
    def get_financing_status_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FinancingApi.get_financing_status ...'
      end
      # resource path
      local_var_path = '/financing'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'Melio-Account'] = opts[:'melio_account'] if !opts[:'melio_account'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetFinancingResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['AccessToken', 'ApiKey']

      new_options = opts.merge(
        :operation => :"FinancingApi.get_financing_status",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FinancingApi#get_financing_status\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Apply for financing for an Account
    # Accounts that wish to use financing must qualify for it. Call this method with values collected based on the result of `GET /financing`  This operation may take a long time (30 seconds).
    # @param idempotency_key [String] Unique idempotency key
    # @param [Hash] opts the optional parameters
    # @option opts [String] :melio_account The &#x60;Melio-Account&#x60; header is used when a Partner wants to perform an operation on behalf of one of its Accounts. It contains the Account&#39;s ID which returned when creating the Account, or when retrieving all of the Partner&#39;s Accounts. Note that most operations are not permitted without the presence of this header.
    # @option opts [PostFinancingRequest] :post_financing_request 
    # @return [PostFinancingResponse]
    def post_financing(idempotency_key, opts = {})
      data, _status_code, _headers = post_financing_with_http_info(idempotency_key, opts)
      data
    end

    # Apply for financing for an Account
    # Accounts that wish to use financing must qualify for it. Call this method with values collected based on the result of &#x60;GET /financing&#x60;  This operation may take a long time (30 seconds).
    # @param idempotency_key [String] Unique idempotency key
    # @param [Hash] opts the optional parameters
    # @option opts [String] :melio_account The &#x60;Melio-Account&#x60; header is used when a Partner wants to perform an operation on behalf of one of its Accounts. It contains the Account&#39;s ID which returned when creating the Account, or when retrieving all of the Partner&#39;s Accounts. Note that most operations are not permitted without the presence of this header.
    # @option opts [PostFinancingRequest] :post_financing_request 
    # @return [Array<(PostFinancingResponse, Integer, Hash)>] PostFinancingResponse data, response status code and response headers
    def post_financing_with_http_info(idempotency_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FinancingApi.post_financing ...'
      end
      # verify the required parameter 'idempotency_key' is set
      if @api_client.config.client_side_validation && idempotency_key.nil?
        fail ArgumentError, "Missing the required parameter 'idempotency_key' when calling FinancingApi.post_financing"
      end
      # resource path
      local_var_path = '/financing'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Idempotency-Key'] = idempotency_key
      header_params[:'Melio-Account'] = opts[:'melio_account'] if !opts[:'melio_account'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'post_financing_request'])

      # return_type
      return_type = opts[:debug_return_type] || 'PostFinancingResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['AccessToken', 'ApiKey']

      new_options = opts.merge(
        :operation => :"FinancingApi.post_financing",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FinancingApi#post_financing\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Request Transactional Financing
    # An eligible Account must request transactional approval for each financed transaction they intend to perform. The result of this operation returns a token that should be used when completing other payments through Melio.  This operation may take a long time (10 seconds).
    # @param idempotency_key [String] Unique idempotency key
    # @param [Hash] opts the optional parameters
    # @option opts [String] :melio_account The &#x60;Melio-Account&#x60; header is used when a Partner wants to perform an operation on behalf of one of its Accounts. It contains the Account&#39;s ID which returned when creating the Account, or when retrieving all of the Partner&#39;s Accounts. Note that most operations are not permitted without the presence of this header.
    # @option opts [PostFinancingTransactionalRequest] :post_financing_transactional_request 
    # @return [PostFinancingTransactionalResponse]
    def post_financing_transaction(idempotency_key, opts = {})
      data, _status_code, _headers = post_financing_transaction_with_http_info(idempotency_key, opts)
      data
    end

    # Request Transactional Financing
    # An eligible Account must request transactional approval for each financed transaction they intend to perform. The result of this operation returns a token that should be used when completing other payments through Melio.  This operation may take a long time (10 seconds).
    # @param idempotency_key [String] Unique idempotency key
    # @param [Hash] opts the optional parameters
    # @option opts [String] :melio_account The &#x60;Melio-Account&#x60; header is used when a Partner wants to perform an operation on behalf of one of its Accounts. It contains the Account&#39;s ID which returned when creating the Account, or when retrieving all of the Partner&#39;s Accounts. Note that most operations are not permitted without the presence of this header.
    # @option opts [PostFinancingTransactionalRequest] :post_financing_transactional_request 
    # @return [Array<(PostFinancingTransactionalResponse, Integer, Hash)>] PostFinancingTransactionalResponse data, response status code and response headers
    def post_financing_transaction_with_http_info(idempotency_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FinancingApi.post_financing_transaction ...'
      end
      # verify the required parameter 'idempotency_key' is set
      if @api_client.config.client_side_validation && idempotency_key.nil?
        fail ArgumentError, "Missing the required parameter 'idempotency_key' when calling FinancingApi.post_financing_transaction"
      end
      # resource path
      local_var_path = '/financing/transaction'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end
      header_params[:'Idempotency-Key'] = idempotency_key
      header_params[:'Melio-Account'] = opts[:'melio_account'] if !opts[:'melio_account'].nil?

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'post_financing_transactional_request'])

      # return_type
      return_type = opts[:debug_return_type] || 'PostFinancingTransactionalResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['AccessToken', 'ApiKey']

      new_options = opts.merge(
        :operation => :"FinancingApi.post_financing_transaction",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FinancingApi#post_financing_transaction\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
